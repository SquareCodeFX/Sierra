name: Build and Release

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x gradlew
      shell: bash

    - name: Generate build number
      id: build_number
      run: |
        BUILD_NUMBER=${{ github.run_number }}
        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_OUTPUT
        echo "Build number: $BUILD_NUMBER"
      shell: bash

    - name: Update version in build.gradle
      run: |
        BUILD_NUMBER=${{ steps.build_number.outputs.BUILD_NUMBER }}
        sed -i "s/version = '1.0-SNAPSHOT'/version = '1.0.$BUILD_NUMBER'/" build.gradle
      shell: bash

    - name: Update version in plugin.yml
      run: |
        BUILD_NUMBER=${{ steps.build_number.outputs.BUILD_NUMBER }}
        sed -i "s/version: '1.0-SNAPSHOT'/version: '1.0.$BUILD_NUMBER'/" src/main/resources/plugin.yml
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build
      shell: bash

    - name: Get commit messages
      id: commits
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          COMMITS=$(git log --pretty=format:"- %s (%h)" ${{ github.event.before }}..${{ github.sha }} | head -20)
        else
          COMMITS=$(git log --pretty=format:"- %s (%h)" -10)
        fi
        echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
        echo "$COMMITS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash

    - name: Find JAR file
      id: jar_file
      run: |
        JAR_FILE=$(find build/libs -name "*.jar" -type f | head -1)
        JAR_NAME=$(basename "$JAR_FILE")
        echo "JAR_FILE=$JAR_FILE" >> $GITHUB_OUTPUT
        echo "JAR_NAME=$JAR_NAME" >> $GITHUB_OUTPUT
        echo "Found JAR: $JAR_FILE"
      shell: bash

    - name: Create Release and Upload Asset
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_SECRET }}
      run: |
        BUILD_NUMBER=${{ steps.build_number.outputs.BUILD_NUMBER }}
        JAR_FILE=${{ steps.jar_file.outputs.JAR_FILE }}
        JAR_NAME=${{ steps.jar_file.outputs.JAR_NAME }}

        # Create release notes
        cat > release_notes.md << 'EOF'
        ## HelloWorldPlugin v1.0.$BUILD_NUMBER

        ### Changes in this release:
        ${{ steps.commits.outputs.COMMITS }}

        ### Installation:
        1. Download the JAR file below
        2. Place it in your server's `plugins` folder
        3. Restart your server

        Built with Java 21 for Minecraft 1.21.3+
        EOF

        # Create release with GitHub CLI
        gh release create "v1.0.$BUILD_NUMBER" \
          --title "Release v1.0.$BUILD_NUMBER" \
          --notes-file release_notes.md \
          "$JAR_FILE#$JAR_NAME"
      shell: bash
